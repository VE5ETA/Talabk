{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hnodi\\\\Desktop\\\\project\\\\Talabk\\\\client\\\\src\\\\pages\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { BrowserRouter, Routes, Route, NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport SignUp from \"./SignUp\";\nimport Login from \"./Login\";\nimport Home from \"./Home\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const Auth = useContext(AuthContext);\n\n  if (Auth.isLoggedIn === true) {\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {},\n      children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"nav-link\",\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(App, \"e+B7P7jnYCaOJfuwMJd2WG+FpFM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hnodi/Desktop/project/Talabk/client/src/pages/App.js"],"names":["React","useContext","BrowserRouter","Routes","Route","NavLink","AuthContext","SignUp","Login","Home","Header","Footer","App","Auth","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,OAAvC,QAAsD,kBAAtD;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAGZ,UAAU,CAACK,WAAD,CAAvB;;AAEA,MAAIO,IAAI,CAACC,UAAL,KAAoB,IAAxB,EAA8B;AAC5B,wBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAA7B;AAAA,8BAEE,QAAC,aAAD;AAAA,+BACE,QAAC,MAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD,MAcO;AACL,wBAAO,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,UAAnB;AAA8B,MAAA,EAAE,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;GApBQF,G;;KAAAA,G;AAsBT,eAAeA,GAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { BrowserRouter, Routes, Route, NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\nimport SignUp from \"./SignUp\";\r\nimport Login from \"./Login\";\r\nimport Home from \"./Home\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nfunction App() {\r\n  const Auth = useContext(AuthContext);\r\n\r\n  if (Auth.isLoggedIn === true) {\r\n    return (\r\n      <AuthContext.Provider value={{}}>\r\n        {/* <Header /> */}\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/home\" element={<Home />} />\r\n            {/* <Route path=\"/signUp\" element={<SignUp />} />\r\n            <Route path=\"/login\" element={<Login />} /> */}\r\n          </Routes>\r\n        </BrowserRouter>\r\n        <Footer />\r\n      </AuthContext.Provider>\r\n    );\r\n  } else {\r\n    return <NavLink className=\"nav-link\" to=\"/Login\" />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}